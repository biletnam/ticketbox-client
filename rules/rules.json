{
  "rules": {
    ".write": false,
    "events": {
      ".read": true,
      ".write": "auth !== null && auth.provider === 'password' && root.child('users').child(auth.uid).child('kind').val() === 'admin'",
      "$eventId": {
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "blocks": {
          ".read": true,
          ".write": "auth !== null && auth.provider === 'password' && root.child('users').child(auth.uid).child('kind').val() === 'admin'",
          "$eventBlockId": {
            "blockId": {
              ".validate": "newData.isString() && newData.val().length > 0 && root.child('blocks').child(newData.parent().child('blockId').val()).exists()"
            },
            "categoryId": {
              ".validate": "newData.isString() && newData.val().length > 0 && root.child('categories').child(newData.parent().child('categoryId').val()).exists()"
            },
            "$other": {
              ".validate": false
            }
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "reservations": {
      ".indexOn": [
        "uid",
        "eventId"
      ],
      ".read": true,
      "$eventId_seatId": {
        ".write": "!data.exists() || (data.child('uid').val() === auth.uid && !(data.child('orderId').exists() && !newData.exists()))",
        "timestamp": {
          ".validate": "newData.isNumber()"
        },
        "eventId": {
          ".validate": "newData.isString() && root.child('events').child(newData.val()).exists()"
        },
        "uid": {
          ".validate": "newData.isString() && newData.val() === auth.uid"
        },
        "orderId": {
          ".validate": "newData.isString() && root.child('orders').child(newData.val()).exists()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "orders": {
      ".read": "auth !== null && ((auth.provider === 'anonymous' && auth.uid === data.child('uid').val()) || auth.provider === 'password')",
      ".write": "auth !== null && auth.provider === 'anonymous' && (!data.exists() || data.exists())",
      "$orderId": {
        "uid": {
          ".validate": "newData.isString() && newData.val() === auth.uid"
        },
        "firstname": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "lastname": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "anonymousOrders": {
      ".read": "auth !== null && auth.provider === 'password'",
      "$anonymousOrderId": { }
    },
    "blocks": {
      ".read": true,
      ".write": "auth !== null && auth.provider === 'password' && root.child('users').child(auth.uid).child('kind').val() === 'admin'",
      "$blockId": {
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "displayName": {
          ".validate": "newData.isString()"
        },
        "seatplan": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "categories": {
      ".read": true,
      ".write": "auth !== null && auth.provider === 'password' && root.child('users').child(auth.uid).child('kind').val() === 'admin'",
      "$categoryId": {
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "price": {
          ".validate": "newData.isNumber()"
        },
        "reducedPrice": {
          ".validate": "newData.isNumber()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "seats": {
      ".read": true,
      ".write": "auth !== null && auth.provider === 'password' && root.child('users').child(auth.uid).child('kind').val() === 'admin'",
      ".indexOn": "blockId",
      "$seatId": {
        "blockId": {
          ".validate": "root.child('blocks').child(newData.val()).exists()"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "x0": {
          ".validate": "newData.isNumber()"
        },
        "y0": {
          ".validate": "newData.isNumber()"
        },
        "x1": {
          ".validate": "newData.isNumber()"
        },
        "y1": {
          ".validate": "newData.isNumber()"
        },
        "x2": {
          ".validate": "newData.isNumber()"
        },
        "y2": {
          ".validate": "newData.isNumber()"
        },
        "x3": {
          ".validate": "newData.isNumber()"
        },
        "y3": {
          ".validate": "newData.isNumber()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "users": {
      "$user": {
        ".read": "auth !== null && auth.provider == 'password' && (auth.uid === $user || root.child('users').child(auth.uid).child('kind').val() === 'admin')",
        ".write": "auth !== null && auth.provider == 'password' && (auth.uid === $user || root.child('users').child(auth.uid).child('kind').val() === 'admin') && (!newData.exists() || newData.hasChildren())",
        "name": {
          ".validate": "newData.isString() && newData.val().length <= 2000"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)"
        },
        "kind": {
          ".validate": "auth !== null && auth.provider == 'password' && root.child('users').child(auth.uid).child('kind').val() === 'admin' && newData.isString() && (newData.val() === 'admin' || newData.val() === 'boxoffice')"
        },
        "$other": {
          ".validate": false
        }
      }
    }
  }
}